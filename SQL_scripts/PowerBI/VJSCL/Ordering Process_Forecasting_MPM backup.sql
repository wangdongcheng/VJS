SELECT STK_SORT_KEY3 AS SUPPLIER, 
STK_SORT_KEY AS BRAND, 
STK_SORT_KEY1 AS CATEGORY,
STK_SORT_KEY2 AS [TYPE],
S2.STK_SUPSTKCDE1 AS SupplierCode,
STKCODE, STKNAME, STKCODE+' | '+STKNAME AS STK_CN,
 STK_USRNUM1 AS POMinQty,
 S3.STK_USRNUM4 AS MIN_STK_QTY, 
 S3.STK_USRNUM5 AS MAX_STK_QTY,
 S3.STK_USRNUM6 AS 'UNITS_PER_PALLET',
 CAST(Z.[3M_AVG] AS INT) AS [3M_AVG], 
 CAST(Z2.[12M_AVG] AS INT) AS [12M_AVG],
 stk_order_in,
 LOC.STK_PHYSICAL+STK_ORDER_IN AS CURRENT_STOCK_QTY,
 CASE WHEN Z.[3M_AVG]=0 THEN 0 ELSE CAST((LOC.STK_PHYSICAL+STK_ORDER_IN)/Z.[3M_AVG] AS DECIMAL (18,2)) END AS CURRENT_STOCK_COVERAGE,
 CASE 
 WHEN 
	(CASE WHEN STK_USRNUM1=0 OR STK_USRNUM1 IS NULL 
	THEN 0 
	ELSE ROUND(FLOOR((S3.STK_USRNUM5*Z.[3M_AVG])-LOC.STK_PHYSICAL-STK_ORDER_IN)/STK_USRNUM1,0)*STK_USRNUM1 END) < 0 THEN 0 
	ELSE 
		CASE 
		WHEN STK_USRNUM1=0 OR STK_USRNUM1 IS NULL 
		THEN 0 
		ELSE ROUND(FLOOR((S3.STK_USRNUM5*Z.[3M_AVG])-LOC.STK_PHYSICAL-STK_ORDER_IN)/STK_USRNUM1,0)*STK_USRNUM1 END END AS AUTO_ORDER_QTY,
 CASE WHEN 
	(CASE WHEN STK_USRNUM1=0 OR STK_USRNUM1 IS NULL THEN 0 ELSE ROUND(FLOOR((S3.STK_USRNUM5*Z.[3M_AVG])-LOC.STK_PHYSICAL-STK_ORDER_IN)/STK_USRNUM1,0)*STK_USRNUM1 END) < 0 THEN 0 ELSE 
		CASE WHEN STK_USRNUM1=0 OR STK_USRNUM1 IS NULL THEN 0 ELSE CASE WHEN Z.[3M_AVG]=0 THEN 0 ELSE CAST((LOC.STK_PHYSICAL+STK_ORDER_IN+(ROUND(FLOOR((S3.STK_USRNUM5*Z.[3M_AVG])-LOC.STK_PHYSICAL-STK_ORDER_IN)/STK_USRNUM1,0)*STK_USRNUM1))/Z.[3M_AVG] AS DECIMAL (18,2)) END END END AS AUTO_ORDER_COVERAGE,
  CASE WHEN 
	(CASE WHEN STK_USRNUM1=0 OR STK_USRNUM1 IS NULL THEN 0 ELSE ROUND(FLOOR((S3.STK_USRNUM5*Z.[3M_AVG])-LOC.STK_PHYSICAL-STK_ORDER_IN)/STK_USRNUM1,0)*STK_USRNUM1 END) < 0 THEN 0 ELSE 
		CASE WHEN STK_USRNUM1=0 OR STK_USRNUM1 IS NULL THEN 0 ELSE CASE WHEN STK_USRNUM6=0 THEN 0 ELSE CAST(ROUND((ROUND(FLOOR((S3.STK_USRNUM5*Z.[3M_AVG])-LOC.STK_PHYSICAL-STK_ORDER_IN)/STK_USRNUM1,0)*STK_USRNUM1)/S3.STK_USRNUM6,2) AS DECIMAL(18,2)) END END END AS AUTO_ORDER_PALLETS
 FROM STK_STOCK S
 INNER JOIN STK_STOCK_2 s2 ON S.STKCODE=S2.STKCODE2
 INNER JOIN STK_STOCK3 S3 ON S3.STKCODE3=S.STKCODE
 LEFT JOIN (
	select det_stock_code, sum(case when det_type = 'CRN' then det_quantity*-1 else DET_QUANTITY end)/3 as [3M_AVG] 
	from SL_PL_NL_DETAIL
	INNER JOIN STK_STOCK3 S3 ON S3.STKCODE3=DET_STOCK_CODE
	where det_date between cast(getdate()-91 as date) and cast(getdate()-1 as date) and det_type in ('INV','CRN') AND DET_LEDGER = 'SL' AND DET_STKSORTKEY3 = '30 MPM PRODUCTS LTD.' AND STK_USRFLAG3 = 0 AND STK_USRFLAG2 = 1
	group by DET_STOCK_CODE) Z
 ON Z.DET_STOCK_CODE=S.STKCODE
 LEFT JOIN (
	select det_stock_code, sum(case when det_type = 'CRN' then det_quantity*-1 else DET_QUANTITY end)/12 as [12M_AVG] 
	from SL_PL_NL_DETAIL 
	INNER JOIN STK_STOCK3 S3 ON S3.STKCODE3=DET_STOCK_CODE
	where det_date between cast(getdate()-366 as date) and cast(getdate()-1 as date) and det_type in ('INV','CRN') AND DET_LEDGER = 'SL' AND DET_STKSORTKEY3 = '30 MPM PRODUCTS LTD.' AND STK_USRFLAG3 = 0 AND STK_USRFLAG2 = 1
	group by DET_STOCK_CODE) Z2
 ON Z2.DET_STOCK_CODE=S.STKCODE
 LEFT JOIN (
	SELECT LOC_STOCK_CODE, SUM(LOC_PHYSICAL) AS STK_PHYSICAL
	FROM STK_LOCATION
	WHERE LOC_USERSORT1 NOT IN ('WHZ','WHY','WSC')
	GROUP BY LOC_STOCK_CODE) LOC
ON S.STKCODE=LOC.LOC_STOCK_CODE
WHERE STK_SORT_KEY3 = '30 MPM PRODUCTS LTD.' AND STK_USRFLAG2 = 1